{"ast":null,"code":"var _jsxFileName = \"D:\\\\micro-auth\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getUserInfo, logout } from '../../services/authService';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const [user, setUser] = useState(null);\n  const [usersList, setUsersList] = useState([]);\n  useEffect(() => {\n    const fetchUserInfo = () => {\n      const userInfo = getUserInfo();\n      setUser(userInfo);\n      if ((userInfo === null || userInfo === void 0 ? void 0 : userInfo.role) === 'admin') {\n        // Fetch all users if the logged-in user is an admin\n        axios.get('http://localhost:5000/api/users') // Adjust the endpoint based on your API\n        .then(response => {\n          setUsersList(response.data);\n        }).catch(error => {\n          console.error('Error fetching users list:', error);\n        });\n      }\n    };\n    fetchUserInfo();\n  }, []);\n  const handleLogout = () => {\n    logout();\n    navigate('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), user ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Welcome, \", user.username, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your role: \", user.role]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), user.role === 'admin' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Users List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: usersList.length > 0 ? usersList.map((user, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [user.username, \" (\", user.email, \")\"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No users found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), user.role === 'user' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"User Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This is user-specific content.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"gH+WrADxSoeHMuleZEwImy+7l+w=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","getUserInfo","logout","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","navigate","user","setUser","usersList","setUsersList","fetchUserInfo","userInfo","role","get","then","response","data","catch","error","console","handleLogout","children","fileName","_jsxFileName","lineNumber","columnNumber","username","length","map","index","email","onClick","_c","$RefreshReg$"],"sources":["D:/micro-auth/frontend/src/components/Dashboard/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getUserInfo, logout } from '../../services/authService';\r\nimport axios from 'axios';\r\n\r\nconst Dashboard = () => {\r\n  const navigate = useNavigate();\r\n  const [user, setUser] = useState(null);\r\n  const [usersList, setUsersList] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    const fetchUserInfo = () => {\r\n      const userInfo = getUserInfo();\r\n      setUser(userInfo);\r\n      \r\n      if (userInfo?.role === 'admin') {\r\n        // Fetch all users if the logged-in user is an admin\r\n        axios.get('http://localhost:5000/api/users') // Adjust the endpoint based on your API\r\n          .then(response => {\r\n            setUsersList(response.data);\r\n          })\r\n          .catch(error => {\r\n            console.error('Error fetching users list:', error);\r\n          });\r\n      }\r\n    };\r\n\r\n    fetchUserInfo();\r\n  }, []);\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n    navigate('/login');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Dashboard</h2>\r\n      {user ? (\r\n        <>\r\n          <p>Welcome, {user.username}!</p>\r\n          <p>Your role: {user.role}</p>\r\n          \r\n          {/* Render admin-specific content */}\r\n          {user.role === 'admin' && (\r\n            <div>\r\n              <h3>Users List</h3>\r\n              <ul>\r\n                {usersList.length > 0 ? (\r\n                  usersList.map((user, index) => (\r\n                    <li key={index}>{user.username} ({user.email})</li>\r\n                  ))\r\n                ) : (\r\n                  <p>No users found.</p>\r\n                )}\r\n              </ul>\r\n            </div>\r\n          )}\r\n\r\n          {/* Render user-specific content */}\r\n          {user.role === 'user' && (\r\n            <div>\r\n              <h3>User Content</h3>\r\n              <p>This is user-specific content.</p>\r\n            </div>\r\n          )}\r\n          \r\n          <button onClick={handleLogout}>Logout</button>\r\n        </>\r\n      ) : (\r\n        <p>Loading...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}